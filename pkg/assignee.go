package pkg

import (
	"encoding/json"
	"io/ioutil"
	"log"
	"net/http"
	"strconv"
	"time"
)

type AutoGenerated struct {
	User struct {
		ID                   int64         `json:"id"`
		URL                  string        `json:"url"`
		Name                 string        `json:"name"`
		Email                string        `json:"email"`
		CreatedAt            time.Time     `json:"created_at"`
		UpdatedAt            time.Time     `json:"updated_at"`
		TimeZone             string        `json:"time_zone"`
		Phone                interface{}   `json:"phone"`
		SharedPhoneNumber    interface{}   `json:"shared_phone_number"`
		Photo                interface{}   `json:"photo"`
		LocaleID             int           `json:"locale_id"`
		Locale               string        `json:"locale"`
		OrganizationID       int           `json:"organization_id"`
		Role                 string        `json:"role"`
		Verified             bool          `json:"verified"`
		ExternalID           interface{}   `json:"external_id"`
		Tags                 []interface{} `json:"tags"`
		Alias                string        `json:"alias"`
		Active               bool          `json:"active"`
		Shared               bool          `json:"shared"`
		SharedAgent          bool          `json:"shared_agent"`
		LastLoginAt          time.Time     `json:"last_login_at"`
		TwoFactorAuthEnabled interface{}   `json:"two_factor_auth_enabled"`
		Signature            string        `json:"signature"`
		Details              string        `json:"details"`
		Notes                string        `json:"notes"`
		RoleType             int           `json:"role_type"`
		CustomRoleID         int           `json:"custom_role_id"`
		Moderator            bool          `json:"moderator"`
		TicketRestriction    interface{}   `json:"ticket_restriction"`
		OnlyPrivateComments  bool          `json:"only_private_comments"`
		RestrictedAgent      bool          `json:"restricted_agent"`
		Suspended            bool          `json:"suspended"`
		ChatOnly             bool          `json:"chat_only"`
		DefaultGroupID       int           `json:"default_group_id"`
		UserFields           struct {
		} `json:"user_fields"`
	} `json:"user"`
}

func GetAssignee(id int) string {

	url := "https://forgerock.zendesk.com/api/v2/users/" + strconv.Itoa(id) + ".json"

	req, _ := http.NewRequest("GET", url, nil)

	req.Header.Add("authorization", "Basic am9yZGFuLmthc3BlckBmb3JnZXJvY2suY29tL3Rva2VuOmtja0JTREx6YWs2V2NSWEZmQkt6eldCZjBNZ1pnWHJEQWFCbk1nRGc=")

	res, _ := http.DefaultClient.Do(req)

	body, _ := ioutil.ReadAll(res.Body)

	myUser := AutoGenerated{}

	jsonErr := json.Unmarshal(body, &myUser)

	if jsonErr != nil {
		log.Fatal(jsonErr)
	}

	defer res.Body.Close()

	response := myUser.User.Name

	return response
}
